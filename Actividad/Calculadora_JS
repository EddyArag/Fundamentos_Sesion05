<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Calculadora en JavaScript</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .calculadora {
      background-color: #333;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      color: #fff;
      width: 400px;
      height: auto;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .display {
      width: 100%;
      height: 100px;
      background-color: #444;
      color: #fff;
      font-size: 36px;
      text-align: right;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      margin-bottom: 20px;
      white-space: nowrap;
      overflow-x: auto;
    }

    .button-row {
      width: 100%;
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 10px;
      margin-bottom: 10px;
    }

    button {
      padding: 15px;
      font-size: 24px;
      border: none;
      border-radius: 5px;
      background-color: #444;
      color: #fff;
      cursor: pointer;
    }

    button:hover {
      background-color: #555;
    }

    .button-large {
      grid-column: span 2;
    }
  </style>
</head>
<body>

<div class="calculadora">
  <div class="display" id="resultado"></div>
  
  <!-- Botones -->
  <div class="button-row">
    <button onclick="clearDisplay()">C</button>
    <button onclick="backspace()">DEL</button>
    <button onclick="appendToDisplay('(')">()</button>
    <button onclick="appendToDisplay(')')">)</button>
  </div>
  <div class="button-row">
    <button onclick="appendToDisplay('7')">7</button>
    <button onclick="appendToDisplay('8')">8</button>
    <button onclick="appendToDisplay('9')">9</button>
    <button onclick="appendToDisplay('/')">/</button>
  </div>
  <div class="button-row">
    <button onclick="appendToDisplay('4')">4</button>
    <button onclick="appendToDisplay('5')">5</button>
    <button onclick="appendToDisplay('6')">6</button>
    <button onclick="appendToDisplay('*')">*</button>
  </div>
  <div class="button-row">
    <button onclick="appendToDisplay('1')">1</button>
    <button onclick="appendToDisplay('2')">2</button>
    <button onclick="appendToDisplay('3')">3</button>
    <button onclick="appendToDisplay('-')">-</button>
  </div>
  <div class="button-row">
    <button onclick="appendToDisplay('0')">0</button>
    <button onclick="appendToDisplay('.')">.</button>
    <button class="button-large" onclick="calculate()">=</button>
    <button onclick="appendToDisplay('+')">+</button>
  </div>

  <!-- Botones adicionales -->
  <div class="button-row">
    <button onclick="appendFunction('^')">^</button> <!-- Potencia -->
    <button onclick="leftArrow()">←</button>
    <button onclick="rightArrow()">→</button>
    <button onclick="appendFunction('sqrt')">√</button>
  </div>

  <!-- Funciones trigonométricas -->
  <div class="button-row">
    <button onclick="appendTrigFunction('sin')">sin</button>
    <button onclick="appendTrigFunction('cos')">cos</button>
    <button onclick="appendTrigFunction('tan')">tan</button>
    <button onclick="appendTrigFunction('sec')">sec</button>
  </div>
  <div class="button-row">
    <button onclick="appendTrigFunction('csc')">csc</button>
    <button onclick="appendTrigFunction('cot')">cot</button>
  </div>
</div>

<script>
  let cursorPosition = 0;
  let currentDisplay = "";

  function updateDisplay() {
    const display = document.getElementById("resultado");
    display.innerHTML = currentDisplay.slice(0, cursorPosition) + '|' + currentDisplay.slice(cursorPosition);
  }

  function appendToDisplay(value) {
    currentDisplay = currentDisplay.slice(0, cursorPosition) + value + currentDisplay.slice(cursorPosition);
    cursorPosition++;
    updateDisplay();
  }

  function clearDisplay() {
    currentDisplay = "";
    cursorPosition = 0;
    updateDisplay();
  }

  function backspace() {
    if (cursorPosition > 0) {
      currentDisplay = currentDisplay.slice(0, cursorPosition - 1) + currentDisplay.slice(cursorPosition);
      cursorPosition--;
    }
    updateDisplay();
  }

  function calculate() {
    let expression = currentDisplay;
    expression = expression.replace(/\^/g, '**');  // Potencias
    try {
      currentDisplay = eval(expression).toString();
      cursorPosition = currentDisplay.length;
    } catch (error) {
      currentDisplay = "Error";
      cursorPosition = 0;
    }
    updateDisplay();
  }

  function appendFunction(func) {
    switch (func) {
      case 'sqrt':
        appendToDisplay('Math.sqrt(');
        break;
    }
  }

  function leftArrow() {
    if (cursorPosition > 0) {
      cursorPosition--;
    }
    updateDisplay();
  }

  function rightArrow() {
    if (cursorPosition < currentDisplay.length) {
      cursorPosition++;
    }
    updateDisplay();
  }

  // Conversión de grados a radianes
  function toRadians(degrees) {
    return degrees * (Math.PI / 180);
  }

  // Funciones trigonométricas y sus recíprocas
  function appendTrigFunction(func) {
    let value = prompt(`Ingresa el valor para ${func.toUpperCase()}:`);
    if (!value || isNaN(value)) return;

    let radians = toRadians(parseFloat(value));

    switch (func) {
      case 'sin':
        currentDisplay = Math.sin(radians).toString();
        break;
      case 'cos':
        currentDisplay = Math.cos(radians).toString();
        break;
      case 'tan':
        currentDisplay = Math.tan(radians).toString();
        break;
      case 'sec':
        currentDisplay = (1 / Math.cos(radians)).toString();
        break;
      case 'csc':
        currentDisplay = (1 / Math.sin(radians)).toString();
        break;
      case 'cot':
        currentDisplay = (1 / Math.tan(radians)).toString();
        break;
    }

    cursorPosition = currentDisplay.length;
    updateDisplay();
  }
  // Función para convertir grados a radianes
  function toRadians(degrees) {
    return degrees * (Math.PI / 180);
  }

  // Función para añadir funciones trigonométricas
  function appendTrigFunction(func) {
    let expression = parseFloat(currentDisplay);  // Obtenemos el valor actual en la pantalla
    if (isNaN(expression)) {
      currentDisplay = "Error";  // Manejo de errores si no es un número válido
      cursorPosition = 0;
      updateDisplay();
      return;
    }

    switch (func) {
      case 'sin':
        currentDisplay = Math.sin(toRadians(expression)).toString();  // Calcula seno
        break;
      case 'cos':
        currentDisplay = Math.cos(toRadians(expression)).toString();  // Calcula coseno
        break;
      case 'tan':
        currentDisplay = Math.tan(toRadians(expression)).toString();  // Calcula tangente
        break;
      case 'sec':
        currentDisplay = (1 / Math.cos(toRadians(expression))).toString();  // Calcula secante
        break;
      case 'csc':
        currentDisplay = (1 / Math.sin(toRadians(expression))).toString();  // Calcula cosecante
        break;
      case 'cot':
        currentDisplay = (1 / Math.tan(toRadians(expression))).toString();  // Calcula cotangente
        break;
      default:
        currentDisplay = "Error";
    }
    
    cursorPosition = currentDisplay.length;  // Actualizamos la posición del cursor al final del nuevo valor
    updateDisplay();
  }


  // Resto de las funciones para gestionar la calculadora
  function appendToDisplay(value) {
    currentDisplay = currentDisplay.slice(0, cursorPosition) + value + currentDisplay.slice(cursorPosition);
    cursorPosition++;
    updateDisplay();
  }

  function clearDisplay() {
    currentDisplay = "";
    cursorPosition = 0;
    updateDisplay();
  }

  function backspace() {
    if (cursorPosition > 0) {
      currentDisplay = currentDisplay.slice(0, cursorPosition - 1) + currentDisplay.slice(cursorPosition);
      cursorPosition--;
    }
    updateDisplay();
  }

  function calculate() {
    let expression = currentDisplay;
    expression = expression.replace(/\^/g, '**');  // Reemplazamos potencias
    try {
      currentDisplay = eval(expression).toString();  // Calculamos la expresión
      cursorPosition = currentDisplay.length;
    } catch (error) {
      currentDisplay = "Error";
      cursorPosition = 0;
    }
    updateDisplay();
  }
</script>

</body>
</html>
